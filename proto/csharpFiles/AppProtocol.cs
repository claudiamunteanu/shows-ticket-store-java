// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: AppProtocol.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace App.Protocol {

  /// <summary>Holder for reflection information generated from AppProtocol.proto</summary>
  public static partial class AppProtocolReflection {

    #region Descriptor
    /// <summary>File descriptor for AppProtocol.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AppProtocolReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChFBcHBQcm90b2NvbC5wcm90bxIMYXBwLnByb3RvY29sIlEKBFVzZXISCgoC",
            "aWQYASABKAkSEAoIdXNlcm5hbWUYAiABKAkSEAoIcGFzc3dvcmQYAyABKAkS",
            "GQoRY29uZmlybWVkUGFzc3dvcmQYBCABKAkiSgoGVGlja2V0EgoKAmlkGAEg",
            "ASgJEg4KBnNob3dJZBgCIAEoCRIRCglidXllck5hbWUYAyABKAkSEQoJbm9P",
            "ZlNlYXRzGAQgASgJInIKBFNob3cSCgoCaWQYASABKAkSEgoKYXJ0aXN0TmFt",
            "ZRgCIAEoCRIQCghkYXRlVGltZRgDIAEoCRINCgVwbGFjZRgEIAEoCRIWCg5h",
            "dmFpbGFibGVTZWF0cxgFIAEoCRIRCglzb2xkU2VhdHMYBiABKAkijgIKCkFw",
            "cFJlcXVlc3QSKwoEdHlwZRgBIAEoDjIdLmFwcC5wcm90b2NvbC5BcHBSZXF1",
            "ZXN0LlR5cGUSIgoEdXNlchgCIAEoCzISLmFwcC5wcm90b2NvbC5Vc2VySAAS",
            "JgoGdGlja2V0GAMgASgLMhQuYXBwLnByb3RvY29sLlRpY2tldEgAEg4KBGRh",
            "dGUYBCABKAlIACJsCgRUeXBlEgoKBlVua293bhAAEgkKBUxvZ2luEAESCgoG",
            "TG9nb3V0EAISDwoLR2V0QWxsU2hvd3MQAxIUChBHZXRGaWx0ZXJlZFNob3dz",
            "EAQSCwoHQWRkVXNlchAFEg0KCUJ1eVRpY2tldBAGQgkKB3BheWxvYWQiyQIK",
            "C0FwcFJlc3BvbnNlEiwKBHR5cGUYASABKA4yHi5hcHAucHJvdG9jb2wuQXBw",
            "UmVzcG9uc2UuVHlwZRINCgVlcnJvchgCIAEoCRIhCgVzaG93cxgDIAMoCzIS",
            "LmFwcC5wcm90b2NvbC5TaG93EiAKBHVzZXIYBCABKAsyEi5hcHAucHJvdG9j",
            "b2wuVXNlchIkCgZ0aWNrZXQYBSABKAsyFC5hcHAucHJvdG9jb2wuVGlja2V0",
            "IpEBCgRUeXBlEgsKB1Vua25vd24QABIGCgJPaxABEgkKBUVycm9yEAISEAoM",
            "VXNlckxvZ2dlZEluEAMSEQoNVXNlckxvZ2dlZE91dBAEEg8KC0dldEFsbFNo",
            "b3dzEAUSFAoQR2V0RmlsdGVyZWRTaG93cxAGEgsKB05ld1VzZXIQBxIQCgxU",
            "aWNrZXRCb3VnaHQQCEItCh1hcHAubmV0d29yay5wcm90b2J1ZmZwcm90b2Nv",
            "bEIMQXBwUHJvdG9idWZzYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::App.Protocol.User), global::App.Protocol.User.Parser, new[]{ "Id", "Username", "Password", "ConfirmedPassword" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::App.Protocol.Ticket), global::App.Protocol.Ticket.Parser, new[]{ "Id", "ShowId", "BuyerName", "NoOfSeats" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::App.Protocol.Show), global::App.Protocol.Show.Parser, new[]{ "Id", "ArtistName", "DateTime", "Place", "AvailableSeats", "SoldSeats" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::App.Protocol.AppRequest), global::App.Protocol.AppRequest.Parser, new[]{ "Type", "User", "Ticket", "Date" }, new[]{ "Payload" }, new[]{ typeof(global::App.Protocol.AppRequest.Types.Type) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::App.Protocol.AppResponse), global::App.Protocol.AppResponse.Parser, new[]{ "Type", "Error", "Shows", "User", "Ticket" }, null, new[]{ typeof(global::App.Protocol.AppResponse.Types.Type) }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class User : pb::IMessage<User>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<User> _parser = new pb::MessageParser<User>(() => new User());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<User> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::App.Protocol.AppProtocolReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public User() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public User(User other) : this() {
      id_ = other.id_;
      username_ = other.username_;
      password_ = other.password_;
      confirmedPassword_ = other.confirmedPassword_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public User Clone() {
      return new User(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 2;
    private string username_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 3;
    private string password_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "confirmedPassword" field.</summary>
    public const int ConfirmedPasswordFieldNumber = 4;
    private string confirmedPassword_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConfirmedPassword {
      get { return confirmedPassword_; }
      set {
        confirmedPassword_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as User);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(User other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Username != other.Username) return false;
      if (Password != other.Password) return false;
      if (ConfirmedPassword != other.ConfirmedPassword) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      if (ConfirmedPassword.Length != 0) hash ^= ConfirmedPassword.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Username.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Username);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Password);
      }
      if (ConfirmedPassword.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ConfirmedPassword);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Username.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Username);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Password);
      }
      if (ConfirmedPassword.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ConfirmedPassword);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (ConfirmedPassword.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConfirmedPassword);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(User other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      if (other.ConfirmedPassword.Length != 0) {
        ConfirmedPassword = other.ConfirmedPassword;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Username = input.ReadString();
            break;
          }
          case 26: {
            Password = input.ReadString();
            break;
          }
          case 34: {
            ConfirmedPassword = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Username = input.ReadString();
            break;
          }
          case 26: {
            Password = input.ReadString();
            break;
          }
          case 34: {
            ConfirmedPassword = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Ticket : pb::IMessage<Ticket>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Ticket> _parser = new pb::MessageParser<Ticket>(() => new Ticket());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Ticket> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::App.Protocol.AppProtocolReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Ticket() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Ticket(Ticket other) : this() {
      id_ = other.id_;
      showId_ = other.showId_;
      buyerName_ = other.buyerName_;
      noOfSeats_ = other.noOfSeats_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Ticket Clone() {
      return new Ticket(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "showId" field.</summary>
    public const int ShowIdFieldNumber = 2;
    private string showId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ShowId {
      get { return showId_; }
      set {
        showId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "buyerName" field.</summary>
    public const int BuyerNameFieldNumber = 3;
    private string buyerName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BuyerName {
      get { return buyerName_; }
      set {
        buyerName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "noOfSeats" field.</summary>
    public const int NoOfSeatsFieldNumber = 4;
    private string noOfSeats_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NoOfSeats {
      get { return noOfSeats_; }
      set {
        noOfSeats_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Ticket);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Ticket other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (ShowId != other.ShowId) return false;
      if (BuyerName != other.BuyerName) return false;
      if (NoOfSeats != other.NoOfSeats) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (ShowId.Length != 0) hash ^= ShowId.GetHashCode();
      if (BuyerName.Length != 0) hash ^= BuyerName.GetHashCode();
      if (NoOfSeats.Length != 0) hash ^= NoOfSeats.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (ShowId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ShowId);
      }
      if (BuyerName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(BuyerName);
      }
      if (NoOfSeats.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(NoOfSeats);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (ShowId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ShowId);
      }
      if (BuyerName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(BuyerName);
      }
      if (NoOfSeats.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(NoOfSeats);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (ShowId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ShowId);
      }
      if (BuyerName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BuyerName);
      }
      if (NoOfSeats.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NoOfSeats);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Ticket other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.ShowId.Length != 0) {
        ShowId = other.ShowId;
      }
      if (other.BuyerName.Length != 0) {
        BuyerName = other.BuyerName;
      }
      if (other.NoOfSeats.Length != 0) {
        NoOfSeats = other.NoOfSeats;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            ShowId = input.ReadString();
            break;
          }
          case 26: {
            BuyerName = input.ReadString();
            break;
          }
          case 34: {
            NoOfSeats = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            ShowId = input.ReadString();
            break;
          }
          case 26: {
            BuyerName = input.ReadString();
            break;
          }
          case 34: {
            NoOfSeats = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Show : pb::IMessage<Show>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Show> _parser = new pb::MessageParser<Show>(() => new Show());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Show> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::App.Protocol.AppProtocolReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Show() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Show(Show other) : this() {
      id_ = other.id_;
      artistName_ = other.artistName_;
      dateTime_ = other.dateTime_;
      place_ = other.place_;
      availableSeats_ = other.availableSeats_;
      soldSeats_ = other.soldSeats_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Show Clone() {
      return new Show(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "artistName" field.</summary>
    public const int ArtistNameFieldNumber = 2;
    private string artistName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ArtistName {
      get { return artistName_; }
      set {
        artistName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "dateTime" field.</summary>
    public const int DateTimeFieldNumber = 3;
    private string dateTime_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DateTime {
      get { return dateTime_; }
      set {
        dateTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "place" field.</summary>
    public const int PlaceFieldNumber = 4;
    private string place_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Place {
      get { return place_; }
      set {
        place_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "availableSeats" field.</summary>
    public const int AvailableSeatsFieldNumber = 5;
    private string availableSeats_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AvailableSeats {
      get { return availableSeats_; }
      set {
        availableSeats_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "soldSeats" field.</summary>
    public const int SoldSeatsFieldNumber = 6;
    private string soldSeats_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SoldSeats {
      get { return soldSeats_; }
      set {
        soldSeats_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Show);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Show other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (ArtistName != other.ArtistName) return false;
      if (DateTime != other.DateTime) return false;
      if (Place != other.Place) return false;
      if (AvailableSeats != other.AvailableSeats) return false;
      if (SoldSeats != other.SoldSeats) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (ArtistName.Length != 0) hash ^= ArtistName.GetHashCode();
      if (DateTime.Length != 0) hash ^= DateTime.GetHashCode();
      if (Place.Length != 0) hash ^= Place.GetHashCode();
      if (AvailableSeats.Length != 0) hash ^= AvailableSeats.GetHashCode();
      if (SoldSeats.Length != 0) hash ^= SoldSeats.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (ArtistName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ArtistName);
      }
      if (DateTime.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(DateTime);
      }
      if (Place.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Place);
      }
      if (AvailableSeats.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(AvailableSeats);
      }
      if (SoldSeats.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(SoldSeats);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (ArtistName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ArtistName);
      }
      if (DateTime.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(DateTime);
      }
      if (Place.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Place);
      }
      if (AvailableSeats.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(AvailableSeats);
      }
      if (SoldSeats.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(SoldSeats);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (ArtistName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ArtistName);
      }
      if (DateTime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DateTime);
      }
      if (Place.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Place);
      }
      if (AvailableSeats.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AvailableSeats);
      }
      if (SoldSeats.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SoldSeats);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Show other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.ArtistName.Length != 0) {
        ArtistName = other.ArtistName;
      }
      if (other.DateTime.Length != 0) {
        DateTime = other.DateTime;
      }
      if (other.Place.Length != 0) {
        Place = other.Place;
      }
      if (other.AvailableSeats.Length != 0) {
        AvailableSeats = other.AvailableSeats;
      }
      if (other.SoldSeats.Length != 0) {
        SoldSeats = other.SoldSeats;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            ArtistName = input.ReadString();
            break;
          }
          case 26: {
            DateTime = input.ReadString();
            break;
          }
          case 34: {
            Place = input.ReadString();
            break;
          }
          case 42: {
            AvailableSeats = input.ReadString();
            break;
          }
          case 50: {
            SoldSeats = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            ArtistName = input.ReadString();
            break;
          }
          case 26: {
            DateTime = input.ReadString();
            break;
          }
          case 34: {
            Place = input.ReadString();
            break;
          }
          case 42: {
            AvailableSeats = input.ReadString();
            break;
          }
          case 50: {
            SoldSeats = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class AppRequest : pb::IMessage<AppRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AppRequest> _parser = new pb::MessageParser<AppRequest>(() => new AppRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AppRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::App.Protocol.AppProtocolReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppRequest(AppRequest other) : this() {
      type_ = other.type_;
      switch (other.PayloadCase) {
        case PayloadOneofCase.User:
          User = other.User.Clone();
          break;
        case PayloadOneofCase.Ticket:
          Ticket = other.Ticket.Clone();
          break;
        case PayloadOneofCase.Date:
          Date = other.Date;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppRequest Clone() {
      return new AppRequest(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::App.Protocol.AppRequest.Types.Type type_ = global::App.Protocol.AppRequest.Types.Type.Unkown;
    /// <summary>
    /// Identifies which request is filled in.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::App.Protocol.AppRequest.Types.Type Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "user" field.</summary>
    public const int UserFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::App.Protocol.User User {
      get { return payloadCase_ == PayloadOneofCase.User ? (global::App.Protocol.User) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.User;
      }
    }

    /// <summary>Field number for the "ticket" field.</summary>
    public const int TicketFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::App.Protocol.Ticket Ticket {
      get { return payloadCase_ == PayloadOneofCase.Ticket ? (global::App.Protocol.Ticket) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.Ticket;
      }
    }

    /// <summary>Field number for the "date" field.</summary>
    public const int DateFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Date {
      get { return payloadCase_ == PayloadOneofCase.Date ? (string) payload_ : ""; }
      set {
        payload_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        payloadCase_ = PayloadOneofCase.Date;
      }
    }

    private object payload_;
    /// <summary>Enum of possible cases for the "payload" oneof.</summary>
    public enum PayloadOneofCase {
      None = 0,
      User = 2,
      Ticket = 3,
      Date = 4,
    }
    private PayloadOneofCase payloadCase_ = PayloadOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PayloadOneofCase PayloadCase {
      get { return payloadCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPayload() {
      payloadCase_ = PayloadOneofCase.None;
      payload_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AppRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AppRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (!object.Equals(User, other.User)) return false;
      if (!object.Equals(Ticket, other.Ticket)) return false;
      if (Date != other.Date) return false;
      if (PayloadCase != other.PayloadCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != global::App.Protocol.AppRequest.Types.Type.Unkown) hash ^= Type.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.User) hash ^= User.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.Ticket) hash ^= Ticket.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.Date) hash ^= Date.GetHashCode();
      hash ^= (int) payloadCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Type != global::App.Protocol.AppRequest.Types.Type.Unkown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (payloadCase_ == PayloadOneofCase.User) {
        output.WriteRawTag(18);
        output.WriteMessage(User);
      }
      if (payloadCase_ == PayloadOneofCase.Ticket) {
        output.WriteRawTag(26);
        output.WriteMessage(Ticket);
      }
      if (payloadCase_ == PayloadOneofCase.Date) {
        output.WriteRawTag(34);
        output.WriteString(Date);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Type != global::App.Protocol.AppRequest.Types.Type.Unkown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (payloadCase_ == PayloadOneofCase.User) {
        output.WriteRawTag(18);
        output.WriteMessage(User);
      }
      if (payloadCase_ == PayloadOneofCase.Ticket) {
        output.WriteRawTag(26);
        output.WriteMessage(Ticket);
      }
      if (payloadCase_ == PayloadOneofCase.Date) {
        output.WriteRawTag(34);
        output.WriteString(Date);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != global::App.Protocol.AppRequest.Types.Type.Unkown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (payloadCase_ == PayloadOneofCase.User) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(User);
      }
      if (payloadCase_ == PayloadOneofCase.Ticket) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ticket);
      }
      if (payloadCase_ == PayloadOneofCase.Date) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Date);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AppRequest other) {
      if (other == null) {
        return;
      }
      if (other.Type != global::App.Protocol.AppRequest.Types.Type.Unkown) {
        Type = other.Type;
      }
      switch (other.PayloadCase) {
        case PayloadOneofCase.User:
          if (User == null) {
            User = new global::App.Protocol.User();
          }
          User.MergeFrom(other.User);
          break;
        case PayloadOneofCase.Ticket:
          if (Ticket == null) {
            Ticket = new global::App.Protocol.Ticket();
          }
          Ticket.MergeFrom(other.Ticket);
          break;
        case PayloadOneofCase.Date:
          Date = other.Date;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::App.Protocol.AppRequest.Types.Type) input.ReadEnum();
            break;
          }
          case 18: {
            global::App.Protocol.User subBuilder = new global::App.Protocol.User();
            if (payloadCase_ == PayloadOneofCase.User) {
              subBuilder.MergeFrom(User);
            }
            input.ReadMessage(subBuilder);
            User = subBuilder;
            break;
          }
          case 26: {
            global::App.Protocol.Ticket subBuilder = new global::App.Protocol.Ticket();
            if (payloadCase_ == PayloadOneofCase.Ticket) {
              subBuilder.MergeFrom(Ticket);
            }
            input.ReadMessage(subBuilder);
            Ticket = subBuilder;
            break;
          }
          case 34: {
            Date = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = (global::App.Protocol.AppRequest.Types.Type) input.ReadEnum();
            break;
          }
          case 18: {
            global::App.Protocol.User subBuilder = new global::App.Protocol.User();
            if (payloadCase_ == PayloadOneofCase.User) {
              subBuilder.MergeFrom(User);
            }
            input.ReadMessage(subBuilder);
            User = subBuilder;
            break;
          }
          case 26: {
            global::App.Protocol.Ticket subBuilder = new global::App.Protocol.Ticket();
            if (payloadCase_ == PayloadOneofCase.Ticket) {
              subBuilder.MergeFrom(Ticket);
            }
            input.ReadMessage(subBuilder);
            Ticket = subBuilder;
            break;
          }
          case 34: {
            Date = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the AppRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Type {
        [pbr::OriginalName("Unkown")] Unkown = 0,
        [pbr::OriginalName("Login")] Login = 1,
        [pbr::OriginalName("Logout")] Logout = 2,
        [pbr::OriginalName("GetAllShows")] GetAllShows = 3,
        [pbr::OriginalName("GetFilteredShows")] GetFilteredShows = 4,
        [pbr::OriginalName("AddUser")] AddUser = 5,
        [pbr::OriginalName("BuyTicket")] BuyTicket = 6,
      }

    }
    #endregion

  }

  public sealed partial class AppResponse : pb::IMessage<AppResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AppResponse> _parser = new pb::MessageParser<AppResponse>(() => new AppResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AppResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::App.Protocol.AppProtocolReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppResponse(AppResponse other) : this() {
      type_ = other.type_;
      error_ = other.error_;
      shows_ = other.shows_.Clone();
      user_ = other.user_ != null ? other.user_.Clone() : null;
      ticket_ = other.ticket_ != null ? other.ticket_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppResponse Clone() {
      return new AppResponse(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::App.Protocol.AppResponse.Types.Type type_ = global::App.Protocol.AppResponse.Types.Type.Unknown;
    /// <summary>
    /// Identifies which request is filled in.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::App.Protocol.AppResponse.Types.Type Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 2;
    private string error_ = "";
    /// <summary>
    /// One of the following will be filled in, depending on the type.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Error {
      get { return error_; }
      set {
        error_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "shows" field.</summary>
    public const int ShowsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::App.Protocol.Show> _repeated_shows_codec
        = pb::FieldCodec.ForMessage(26, global::App.Protocol.Show.Parser);
    private readonly pbc::RepeatedField<global::App.Protocol.Show> shows_ = new pbc::RepeatedField<global::App.Protocol.Show>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::App.Protocol.Show> Shows {
      get { return shows_; }
    }

    /// <summary>Field number for the "user" field.</summary>
    public const int UserFieldNumber = 4;
    private global::App.Protocol.User user_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::App.Protocol.User User {
      get { return user_; }
      set {
        user_ = value;
      }
    }

    /// <summary>Field number for the "ticket" field.</summary>
    public const int TicketFieldNumber = 5;
    private global::App.Protocol.Ticket ticket_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::App.Protocol.Ticket Ticket {
      get { return ticket_; }
      set {
        ticket_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AppResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AppResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Error != other.Error) return false;
      if(!shows_.Equals(other.shows_)) return false;
      if (!object.Equals(User, other.User)) return false;
      if (!object.Equals(Ticket, other.Ticket)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != global::App.Protocol.AppResponse.Types.Type.Unknown) hash ^= Type.GetHashCode();
      if (Error.Length != 0) hash ^= Error.GetHashCode();
      hash ^= shows_.GetHashCode();
      if (user_ != null) hash ^= User.GetHashCode();
      if (ticket_ != null) hash ^= Ticket.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Type != global::App.Protocol.AppResponse.Types.Type.Unknown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (Error.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Error);
      }
      shows_.WriteTo(output, _repeated_shows_codec);
      if (user_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(User);
      }
      if (ticket_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Ticket);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Type != global::App.Protocol.AppResponse.Types.Type.Unknown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (Error.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Error);
      }
      shows_.WriteTo(ref output, _repeated_shows_codec);
      if (user_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(User);
      }
      if (ticket_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Ticket);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != global::App.Protocol.AppResponse.Types.Type.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (Error.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Error);
      }
      size += shows_.CalculateSize(_repeated_shows_codec);
      if (user_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(User);
      }
      if (ticket_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ticket);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AppResponse other) {
      if (other == null) {
        return;
      }
      if (other.Type != global::App.Protocol.AppResponse.Types.Type.Unknown) {
        Type = other.Type;
      }
      if (other.Error.Length != 0) {
        Error = other.Error;
      }
      shows_.Add(other.shows_);
      if (other.user_ != null) {
        if (user_ == null) {
          User = new global::App.Protocol.User();
        }
        User.MergeFrom(other.User);
      }
      if (other.ticket_ != null) {
        if (ticket_ == null) {
          Ticket = new global::App.Protocol.Ticket();
        }
        Ticket.MergeFrom(other.Ticket);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::App.Protocol.AppResponse.Types.Type) input.ReadEnum();
            break;
          }
          case 18: {
            Error = input.ReadString();
            break;
          }
          case 26: {
            shows_.AddEntriesFrom(input, _repeated_shows_codec);
            break;
          }
          case 34: {
            if (user_ == null) {
              User = new global::App.Protocol.User();
            }
            input.ReadMessage(User);
            break;
          }
          case 42: {
            if (ticket_ == null) {
              Ticket = new global::App.Protocol.Ticket();
            }
            input.ReadMessage(Ticket);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = (global::App.Protocol.AppResponse.Types.Type) input.ReadEnum();
            break;
          }
          case 18: {
            Error = input.ReadString();
            break;
          }
          case 26: {
            shows_.AddEntriesFrom(ref input, _repeated_shows_codec);
            break;
          }
          case 34: {
            if (user_ == null) {
              User = new global::App.Protocol.User();
            }
            input.ReadMessage(User);
            break;
          }
          case 42: {
            if (ticket_ == null) {
              Ticket = new global::App.Protocol.Ticket();
            }
            input.ReadMessage(Ticket);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the AppResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Type {
        [pbr::OriginalName("Unknown")] Unknown = 0,
        [pbr::OriginalName("Ok")] Ok = 1,
        [pbr::OriginalName("Error")] Error = 2,
        [pbr::OriginalName("UserLoggedIn")] UserLoggedIn = 3,
        [pbr::OriginalName("UserLoggedOut")] UserLoggedOut = 4,
        [pbr::OriginalName("GetAllShows")] GetAllShows = 5,
        [pbr::OriginalName("GetFilteredShows")] GetFilteredShows = 6,
        [pbr::OriginalName("NewUser")] NewUser = 7,
        [pbr::OriginalName("TicketBought")] TicketBought = 8,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
